snippet "^#!" "#!/usr/bin/env ruby"
$0
endsnippet

snippet If "<command> if <expression>"
${1:command} if ${0:expression}
endsnippet

snippet Unless "<command> unless <expression>"
${1:command} unless ${0:expression}
endsnippet

snippet if "if <condition> ... end"
if ${1:condition}
	${2:# TODO}
end
endsnippet

snippet "\b(de)?f" "def <name>..." r
def ${1:function_name}(${2:args})
$0
end
endsnippet

snippet each "<elements>.each do |<element>| <block> end"
${1:elements}.each do |${2:${1/s$//}}|
$0
end
endsnippet

snippet "(\S+)\.map" ".map do |<element>| <block> end" r
`!p snip.rv=match.group(1)`.map do |${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`}|
	${0:# TODO}
end
endsnippet

snippet do "do |<key>| ... end" i
do |${1:args}|
	$0
end
endsnippet

snippet while "while <expression> ... end"
while ${1:expression}
	${0:# TODO}
end
endsnippet

snippet "\b(r|attr)" "attr_reader :<attr_names>" r
attr_reader :${0:attr_names}
endsnippet

snippet "\b(w|attr)" "attr_writer :<attr_names>" r
attr_writer :${0:attr_names}
endsnippet

snippet "\b(rw|attr)" "attr_accessor :<attr_names>" r
attr_accessor :${0:attr_names}
endsnippet

snippet begin "begin ... rescue ... end"
begin
	${1:# TODO}
rescue
	${0:# TODO}
end
endsnippet

snippet class "class"
class ${1:class_name}
$0
end
endsnippet

snippet module "module"
module ${1:module_name}
	$0
end
endsnippet
